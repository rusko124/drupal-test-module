<?php

/**
 * @file
 * Contains mailing.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Queue\QueueFactory;
use Drupal\Core\Queue\QueueInterface;
use Drupal\Core\Render\BubbleableMetadata;

/**
 * Implements hook_help().
 */
function mailing_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mailing module.
    case 'help.page.mailing':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module for mailing to user.') . '</p>';
      return $output;

    default:
  }
}
 
/**
 * Implements hook_mail().
 */
function mailing_mail($key, &$message, $params) {
  switch ($key) {
    case 'mailing_queue':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * Implements hook_cron().
 */
function mailing_cron() {
  /** @var QueueFactory $queue_factory */
  $queue_factory = \Drupal::service('queue');
  /** @var QueueInterface $queue */
  $queue = $queue_factory->get('mailing_queue'); 
  $queue_mail = \Drupal::queue('mail');
  $queue_mail_count = $queue_mail->numberOfItems();
  if ($queue_mail_count > 10) {
    $count = 10;
  }
  else {
    $count = $queue_mail_count;
  }
  for ($i=0; $i < $count; $i++) { 
    $item = $queue_mail->claimItem();
    $data_items = ['mail' => $item->data['mail'],'username' => $item->data['username']];
    $queue->createItem();
    $queue_mail->deleteItem($data_items);
  }
}

 /**
  * Implements hook_token_info().
  */
function mailing_token_info() {
  $info = array();
  $info['tokens']['mailing']['username'] = array(
    'name' => t('Username'),
    'description' => t('Username'),
  );
  $info['tokens']['mailing']['admin_mail'] = array(
    'name' => t('Admin mail'),
    'description' => t('Admin mail'),
  );
  return $info;
}

 /**
  * Implements hook_tokens().
  */
function mailing_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = array();
  $mailing_user_data = $data['mailing_user'];
  $mailing_admin_data = $data['mailing_admin_mail'];
  if ($type == 'mailing') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'admin_mail':
          $new = $mailing_admin_data;
          $replacements[$original] = $new;
          break;
        case 'username':
          $new = $mailing_user_data;
          $replacements[$original] = $new;
          break;
      }
    }
  }   
  return $replacements;
}
